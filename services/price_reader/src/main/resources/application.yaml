spring:
  datasource:
    url: jdbc:mysql://localhost:3307/foodapp
    username: root
    password: Admin123!
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  sql:
    init:
      mode: always
  data:
    redis:
      host: localhost
      port: 6379
      database: 0
      lettuce:
        pool:
          max-active: 16
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
          time-between-eviction-runs: 120s
        shutdown-timeout: 100ms
      connect-timeout: 2000ms
  cache:
    type: redis
    redis:
      time-to-live: 600000
      cache-null-values: false
      use-key-prefix: true
      key-prefix: "cache::"

redis:
  cache:
    expiration:
      user: 300000
      product: 1800000

app: # for data injection
  cache:
    redis:
      cacheNullValue: false
      keyPrefix: reader # all cache in reader services should be named as reader_xxx;
    price:
      ttl: PT5M # 5 minutes
    timeline:
      ttl: PT5M # 5 minutes

server:
  port: 8900  # RESTful HTTP port (Tomcat)

grpc:
  server:
    port: 9090  # gRPC server port

debug: true

management:
  endpoint:
    web:
      exposure:
        include: health, info, prometheus
      base-path: /actuator
  endpoints:
    health:
      show-details: always
      probes:
          enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
  prometheus:
    metrics:
      export:
        enabled: true
jwt:
  secret: my-super-secret-key-which-should-be-long
  expiration: 3600000  # 1 hour
